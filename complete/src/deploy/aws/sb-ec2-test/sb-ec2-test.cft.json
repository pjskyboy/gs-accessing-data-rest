{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "sbec2testvpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ]
      }
    },
    "sbec2testsubnet1a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.0.0/20",
        "AvailabilityZone": "eu-west-1a",
        "VpcId": {
          "Ref": "sbec2testvpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ]
      }
    },
    "sbec2testsubnet1b": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.16.0/20",
        "AvailabilityZone": "eu-west-1b",
        "VpcId": {
          "Ref": "sbec2testvpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ]
      }
    },
    "sbec2testigw": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ]
      }
    },
    "sbec2testdhcpos": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-west-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "sbec2testnacl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "sbec2testvpc"
        }
      }
    },
    "sbec2testrtbl": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "sbec2testvpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ]
      }
    },
    "sbec2testinstance1b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-2587b443",
        "InstanceType": "t2.micro",
        "KeyName": "sundancer_id_rsa.pub",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "sbec2testsubnet1b"
            },
            "PrivateIpAddresses": [
              {
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgsbec2testec2sg"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "sbec2testinstance1a": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-2587b443",
        "InstanceType": "t2.micro",
        "KeyName": "sundancer_id_rsa.pub",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "sbec2testsubnet1a"
            },
            "PrivateIpAddresses": [
              {
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgsbec2testec2sg"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "sgsbec2testec2sg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EC2 security group",
        "VpcId": {
          "Ref": "sbec2testvpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ]
      }
    },
    "sgsbec2testlbsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Load balancer security group",
        "VpcId": {
          "Ref": "sbec2testvpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ]
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "sbec2testnacl"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "sbec2testnacl"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "sbec2testnacl"
        },
        "SubnetId": {
          "Ref": "sbec2testsubnet1a"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "sbec2testnacl"
        },
        "SubnetId": {
          "Ref": "sbec2testsubnet1b"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "sbec2testvpc"
        },
        "InternetGatewayId": {
          "Ref": "sbec2testigw"
        }
      }
    },
    "lb": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "sb-ec2-test-80-lb",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          "sgsbec2testlbsg"
        ],
        "Subnets": [
          "sbec2testsubnet1a",
          "sbec2testsubnet1b"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ]
      }
    },
    "targetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/profile",
        "HealthCheckPort": "8080",
        "HealthCheckProtocol": "HTTP",
        "Name": "sb-ec2-test-tg",
        "Port": 8080,
        "Protocol": "HTTP",
        "Matcher": {
          "HttpCode": 200
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "sb-ec2-test"
          }
        ],
        "Targets": [
          {
            "Id": "sbec2testinstance1b"
          },
          {
            "Id": "sbec2testinstance1a"
          }
        ],
        "VpcId": "sbec2testvpc"
      }
    },
    "subnetroute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "sbec2testrtbl"
        },
        "SubnetId": {
          "Ref": "sbec2testsubnet1b"
        }
      }
    },
    "subnetroute3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "sbec2testrtbl"
        },
        "SubnetId": {
          "Ref": "sbec2testsubnet1a"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "sbec2testrtbl"
        },
        "GatewayId": {
          "Ref": "sbec2testigw"
        }
      },
      "DependsOn": "gw1"
    },
    "sbec2testdhcpassoc": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "sbec2testvpc"
        },
        "DhcpOptionsId": {
          "Ref": "sbec2testdhcpos"
        }
      }
    },
    "sbec2testingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsbec2testec2sg"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "SourceSecurityGroupId": {
          "Ref": "sgsbec2testlbsg"
        },
        "SourceSecurityGroupOwnerId": "751191391887"
      }
    },
    "sbec2testingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsbec2testec2sg"
        },
        "IpProtocol": "-1",
        "CidrIp": "82.10.149.166/32"
      }
    },
    "sbec2testingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsbec2testlbsg"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "82.10.149.166/32"
      }
    },
    "sbec2testegress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsbec2testec2sg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "sbec2testegress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsbec2testlbsg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "sb-ec2-test - cloudformation template for a load balanced pair of EC2 instances"
}