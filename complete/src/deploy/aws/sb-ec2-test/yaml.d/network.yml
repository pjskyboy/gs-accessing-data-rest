AWSTemplateFormatVersion: '2010-09-09'
Description: 'Build a vpc and loadbalancer with rules to support a dual AZ pair of EC2 instances'
Parameters:
  projectName:
    Description: "Project name to tag resources with using the ProjectName tag"
    Type: "String"
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: "projectName"
  azA:
    Description: "Availability Zone A for the Region"
    Type: "AWS::EC2::AvailabilityZone::Name"
    Default: "Unknown"
  azB:
    Description: "Availability Zone B for the Region"
    Type: "AWS::EC2::AvailabilityZone::Name"
    Default: "Unknown"
  domainName:
    Description: "Domain to be used for DHCP Options"
    Type: "String"
    Default: "unknown.domain.name"

Resources:
  vpc: {Type: 'AWS::EC2::VPC', Properties: {CidrBlock: 172.31.0.0/16, InstanceTenancy: default, EnableDnsSupport: 'true', EnableDnsHostnames: 'true', Tags: [{Key: ProjectName, Value: {Ref: projectName}}, {Key: Name, Value: {"Fn::Join": [ "-", [ Ref: projectName, "vpc" ] ]}}]}}
  subnetA: {Type: 'AWS::EC2::Subnet', Properties: {CidrBlock: 172.31.0.0/20, AvailabilityZone: {Ref: azA}, VpcId: {Ref: vpc}, Tags: [{Key: ProjectName, Value: {Ref: projectName}}, {Key: Name, Value: {"Fn::Join": [ "-", [ Ref: projectName, "subnetA" ] ]}}]}}
  subnetB: {Type: 'AWS::EC2::Subnet', Properties: {CidrBlock: 172.31.16.0/20, AvailabilityZone: {Ref: azB}, VpcId: {Ref: vpc}, Tags: [{Key: ProjectName, Value: {Ref: projectName}}, {Key: Name, Value: {"Fn::Join": [ "-", [ Ref: projectName, "subnetB" ] ]}}]}}
  internetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags: [{Key: ProjectName, Value: {Ref: projectName}}, {Key: Name, Value: {"Fn::Join": [ "-", [ Ref: projectName, "igw" ] ]}}]
  dhcpOptions:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName:
        Ref: domainName
      DomainNameServers: [AmazonProvidedDNS]
      Tags: [{Key: ProjectName, Value: {Ref: projectName}}, {Key: Name, Value: {"Fn::Join": [ "-", [ Ref: projectName, "dhcp-options" ] ]}}]

  routeTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: vpc
      Tags: [{Key: ProjectName, Value: {Ref: projectName}}, {Key: Name, Value: {"Fn::Join": [ "-", [ Ref: projectName, "rt" ] ]}}]
  gateway: {Type: 'AWS::EC2::VPCGatewayAttachment', Properties: {VpcId: {Ref: vpc}, InternetGatewayId: {Ref: internetGateway}}}
  subnetRouteA: {Type: 'AWS::EC2::SubnetRouteTableAssociation', Properties: {RouteTableId: {Ref: routeTable}, SubnetId: {Ref: subnetA}}}
  subnetRouteB: {Type: 'AWS::EC2::SubnetRouteTableAssociation', Properties: {RouteTableId: {Ref: routeTable}, SubnetId: {Ref: subnetB}}}
  route: {Type: 'AWS::EC2::Route', Properties: {DestinationCidrBlock: 0.0.0.0/0, RouteTableId: {Ref: routeTable}, GatewayId: {Ref: internetGateway}}, DependsOn: gateway}
  dhcpOptionsAssoc: {Type: 'AWS::EC2::VPCDHCPOptionsAssociation', Properties: {VpcId: {Ref: vpc}, DhcpOptionsId: {Ref: dhcpOptions}}}

Outputs:
  vpcId:
    Description: "VPC ID"
    Value: 
      Ref: vpc
    Export: 
      Name:
        "Fn::Sub": "${AWS::StackName}-vpcId"
  subnetA:
    Description: "The subnet ID for AZ A"
    Value: 
      Ref: subnetA
    Export:
      Name:
        "Fn::Sub": "${AWS::StackName}-subnetA"
  subnetB:
    Description: "The subnet ID for AZ B"
    Value:
      Ref: subnetB
    Export:
      Name:
        "Fn::Sub": "${AWS::StackName}-subnetB"
